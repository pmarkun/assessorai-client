# Generated by Django 5.2.3 on 2025-06-17 00:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Mandato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("nome_parlamentar", models.CharField(max_length=255)),
                (
                    "casa_legislativa",
                    models.CharField(
                        choices=[
                            ("cm", "Câmara Municipal"),
                            ("ale", "Assembleia Legislativa"),
                            ("cf", "Câmara Federal"),
                            ("senado", "Senado Federal"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "cargo",
                    models.CharField(
                        choices=[
                            ("vereador", "Vereador(a)"),
                            ("dep_estadual", "Deputado(a) Estadual"),
                            ("dep_federal", "Deputado(a) Federal"),
                            ("senador", "Senador(a)"),
                        ],
                        max_length=20,
                    ),
                ),
                ("estado", models.CharField(max_length=2)),
                ("municipio", models.CharField(blank=True, max_length=120)),
                (
                    "posicionamento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("esq", "Esquerda"),
                            ("cesq", "Centro-esquerda"),
                            ("centro", "Centro"),
                            ("cdir", "Centro-direita"),
                            ("dir", "Direita"),
                        ],
                        max_length=6,
                    ),
                ),
                (
                    "perfil",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("legislador", "Legislador"),
                            ("fiscalizador", "Fiscalizador"),
                            ("articulador", "Articulador"),
                        ],
                        max_length=15,
                    ),
                ),
                ("primeiro_mandato", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Objetivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descricao", models.CharField(max_length=255)),
                ("ordem", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["ordem"],
            },
        ),
        migrations.CreateModel(
            name="ArquivoBiblioteca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("titulo", models.CharField(max_length=255)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("doc", "DOC/DOCX"),
                            ("img", "Imagem"),
                            ("outro", "Outro"),
                        ],
                        max_length=10,
                    ),
                ),
                ("arquivo", models.FileField(upload_to="biblioteca/")),
                (
                    "mandato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="biblioteca",
                        to="core.mandato",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "funcao",
                    models.CharField(
                        blank=True, help_text="Cargo/função no mandato", max_length=100
                    ),
                ),
                (
                    "papel",
                    models.CharField(
                        choices=[
                            ("admin", "Administrador"),
                            ("gestor", "Gestor"),
                            ("assessor", "Assessor"),
                        ],
                        default="assessor",
                        max_length=15,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "mandato",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usuarios",
                        to="core.mandato",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="MetaObjetivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("indicador", models.CharField(max_length=255)),
                ("valor_alvo", models.FloatField()),
                ("valor_atual", models.FloatField(default=0)),
                ("data_limite", models.DateField(blank=True, null=True)),
                (
                    "objetivo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metas",
                        to="core.objetivo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Planejamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("oportunidades", models.TextField(blank=True)),
                ("fraquezas", models.TextField(blank=True)),
                ("temas_interesse", models.TextField(blank=True)),
                ("objetivo_ano", models.CharField(blank=True, max_length=255)),
                (
                    "mandato",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="planejamento",
                        to="core.mandato",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="objetivo",
            name="planejamento",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="objetivos",
                to="core.planejamento",
            ),
        ),
    ]
